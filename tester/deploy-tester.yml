# deploy on the given host a user that can build a
# kernel and test in in a vm
# given repository on a given github account
#
# Usage:
#
# ansible-playbook -i -e "updater_user=tdc-tester" \
#                     -e "updater_key=updater.key" \
#                     -e "updater_pubkey=updater.pub" \
#                     deploy-tester.yml
#
---
- hosts: tester
  gather_facts: false
  vars_prompt:
    - name: tester_user
      prompt: "user that will update the account"
    - name: tester_password
      prompt: "(hash of) password for logging into the account"
      private: no
    - name: tester_pubkey
      prompt: "public key for connecting to the account"
      private: no
    - name: tester_key
      prompt: "key for connecting to the account"
      private: no

  tasks:

   - name: enable EPEL repository
     yum_repository:
       name: epel_repo
       description: EPEL YUM repo
       baseurl:  https://dl.fedoraproject.org/pub/epel/7/x86_64/
       enabled: true
       gpgcheck: false

   - name: install required rpms
     yum:
       name: [ git, ccache, make, gcc, rsync, kernel-devel, elfutils-libelf-devel, bc, openssl-devel, libvirt, libguestfs-tools, libguestfs-tools-c, qemu, qemu-kvm, qemu-system-x86 ]
       state: present

   - name: create user  "{{ tester_user }}"
     user:
       name: "{{ tester_user }}"
       password: "{{ tester_password }}"
       shell: /bin/bash
       append: yes
       groups: [ libvirt, updater ]
       generate_ssh_key: yes

   - name: create directories
     file:
       path: "{{ item }}"
       state: directory
       owner: "{{ tester_user }}"
       group: "{{ tester_user }}"
     with_items:
     - "/home/{{ tester_user }}/bin"
     - "/home/{{ tester_user }}/.ccache"

   - name: copy scripts and identity files
     copy: src={{ item.src }} dest={{ item.dest }} owner={{ item.owner }} mode={{ item.mode }}
     with_items:
     - { src: "{{ tester_pubkey }}", dest: "/home/{{ tester_user }}/.ssh/id_rsa.pub", owner: "{{ tester_user }}",  mode: 644 }
     - { src: "{{ tester_key }}", dest: "/home/{{ tester_user }}/.ssh/id_rsa", owner: "{{ tester_user }}", mode: 600 }
     - { src: run_tdc.sh, dest: "/root/run_tdc.sh", owner: root, mode: 755 }
     - { src: tdc.service, dest: "/root/tdc.service", owner: root, mode: 755 }
     - { src: tdc.timer, dest: "/root/tdc.timer", owner: root, mode: 755 }
     - { src: ccache.conf, dest: "/home/{{ tester_user }}/.ccache/ccache.conf", owner: "{{ tester_user }}  ", owner: root, mode: 644 }
     - { src: tdc_kernel_config, dest: "/home/{{ tester_user }}/tdc_kernel_config", owner: "{{ tester_user }}  ", owner: root, mode: 644 }

   - name: Update known hosts
     known_hosts:
       path: "/home/{{ tester_user }}/.ssh/known_hosts"
       name: "{{ item }}"
       key: "{{ lookup('pipe', 'ssh-keyscan {{ item }},`dig +short {{ item }}`') }}"
     with_items:
     - github.com

   - name: Add virt-builder repo for RHEL
     copy:
       content: |
          [rhel]
          uri=http://file.rdu.redhat.com/~rjones/builder/index.asc
       dest: /etc/virt-builder/repos.d/rhel.conf
       mode: 0644
       owner: root
       group: root

   - name: Download/build f29 VM base image
     shell: |
       export LIBGUESTFS_BACKEND=direct;
       virt-builder fedora-29 \
         --format qcow2 \
         --size 8G \
         --install rsync \
         --ssh-inject root:file:/home/tester/.ssh/id_rsa.pub \
         --root-password password:root \
         --selinux-relabel \
         --install rsync,clang,llvm,make \
         --append-line '/etc/fstab: share /root/share 9p rw,sync,dirsync,relatime,noauto,x-systemd.automount,trans=virtio,version=9p2000.L 0 0' \
         --mkdir /root/share \
         --upload "tdc.timer:/usr/lib/systemd/system/tdc.timer" \
         --upload "tdc.service:/usr/lib/systemd/system/tdc.service" \
         --upload "run_tdc.sh:/usr/local/sbin/run_tdc.sh" \
         --firstboot-command 'nmcli connection add con-name mgt ifname enp0s1 type ethernet ip4 192.168.122.2/24 autoconnect yes' \
         --firstboot-command 'nmcli connection down "Wired connection 1" ' \
         --firstboot-command 'systemctl disable firewalld' \
         --firstboot-command 'systemctl enable tdc.timer' \
         --output "/home/{{ tester_user }}/f29.qcow2"

   - name: set owner and permission for files generated by the script
     file:
       path: "{{ item }}"
       mode: 0644
       owner: "{{ tester_user }}"
       group: "{{ tester_user }}"
     with_items:
     - "/home/{{ tester_user }}/f29.qcow2"
     - "/home/{{ tester_user }}/.ssh/known_hosts"

